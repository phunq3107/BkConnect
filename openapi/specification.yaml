openapi: 3.0.0
servers:
  - description: Local - For dev purpose only
    url: http://127.0.0.1:8080
info:
  description: BkConnect API
  version: "1.0.0"
  title: BkConnect API
  contact:
    email: phunguyen3107@gmail.com
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: non-logged
    description: Non-logged User
  - name: logged
    description: Logged User
  - name: admin
    description: Admin only
  - name: tutor
    description: For Tutor only
  - name: student
    description: Student only

paths:
  /session/login:
    post:
      tags:
        - non-logged
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: './schema/request.yaml#/components/schemas/LoginRq'
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: './schema/response.yaml#/components/schemas/LoginRs'
  /session/getCurrentUser:
    get:
      tags:
        - logged
      summary: Get current user
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: './schema/response.yaml#/components/schemas/GetCurrentUserRs'
  /user/add:
    post:
      tags:
        - non-logged
      summary: Register
      requestBody:
        content:
          application/json:
            schema:
              $ref: './schema/request.yaml#/components/schemas/RegisterRq'
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: './schema/response.yaml#/components/schemas/RegisterRs'

  /user/get/{id}:
    get:
      tags:
        - non-logged
      summary: Get user by id
      parameters:
        - in: path
          name: id
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: './schema/response.yaml#/components/schemas/GetUserRs'

  /user/update/{id}:
    post:
      tags:
        - logged
      parameters:
        - in: path
          name: id
      requestBody:
        content:
          application/json:
            schema:
              $ref:
                './schema/request.yaml#/components/schemas/UpdateUserRq'
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: './schema/response.yaml#/components/schemas/GetUserRs'

  /user/getAll: # TODO: not impl
    get:
      tags:
        - non-logged
      summary: Get all user
      requestBody:
        content:
          application/json:
            schema:
              $ref:
                './schema/request.yaml#/components/schemas/GetUserFilter'
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: './schema/response.yaml#/components/schemas/GetUserRs'

  /tutor/get/{id}:
    get:
      tags:
        - non-logged
      summary: Get tutor by id
      parameters:
        - in: path
          name: id
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: './schema/response.yaml#/components/schemas/GetTutorRs'
  /tutor/getAll:
    get:
      tags:
        - non-logged
      summary: Get all tutor
      parameters:
        - in: query
          name: pageNumber
        - in: query
          name: pageSize
      requestBody:
        content:
          application/json:
            schema:
              $ref:
                './schema/request.yaml#/components/schemas/GetTutorFilter'
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: './schema/response.yaml#/components/schemas/GetTutorRs'

  /tutor/update/{id}:
    post:
      tags:
        - tutor
      parameters:
        - in: path
          name: id
      requestBody:
        content:
          application/json:
            schema:
              $ref:
                './schema/request.yaml#/components/schemas/UpdateTutorRq'
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: './schema/response.yaml#/components/schemas/GetTutorRs'

  /subject/getAll:
    get:
      tags:
        - non-logged
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: './schema/response.yaml#/components/schemas/GetSubjectRs'

  /post/get/{id}:
    get:
      tags:
        - non-logged
      parameters:
        - in: path
          name: id
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: './schema/response.yaml#/components/schemas/GetPostRs'


  /post/add:
    post:
      tags:
        - logged
      requestBody:
        content:
          application/json:
            schema:
              $ref:
                './schema/request.yaml#/components/schemas/AddPostRq'
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: './schema/response.yaml#/components/schemas/GetPostRs'




